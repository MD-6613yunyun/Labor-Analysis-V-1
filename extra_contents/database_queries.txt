database = 'postgresql'

CREATE TABLE vehicle (
    id serial PRIMARY KEY,
    customer_id int references customer(id) not null,
    plate varchar(100) NOT NULL,
    model varchar(100) NOT NULL,
    year int NOT NULL,
    vehicle_concatenated varchar(300) NOT NULL UNIQUE
);


create table jobType (
    id serial primary key,
    name varchar(200) not null unique
);

create table vehicle_brand(
    id serial primary key,
    name varchar(100) not null unique
)

create table vehicle_model(
    id serial primary key,
    brand_id int references vehicle_brand(id),
    name varchar(100) not null
)

create table state(
    id serial primary key,
    short_name varchar(5) not null unique,
    name varchar(20) not null unique
);


create table customer (
    id serial primary key,
    code varchar(10) not null unique,
    name varchar(200) not null unique,
    address varchar(100) not null,
    ph_no varhcar(50) not null unique,
    create_date date default CURRENT_DATE,
);

create table res_partner (
    id serial primary key,
    name varchar(100) unique not null
)

create table shop (
    id serial primary key,
    business_unit_id int references res_partner (id) not null,
    name varchar(100) unique not null
)

create table eachJob (
    id serial,
    job_date date default CURRENT_DATE,
    business_unit_id int references res_partner (id) not null,
    shop_id int references shop (id) not null,
    month_extracted integer GENERATED ALWAYS AS (EXTRACT(MONTH FROM job_date)) STORED,
    job_no varchar(100),
    invoice_no varchar(100),
    customer_id int references customer (id) not null,
    vehicle_id int references vehicle (id) not null,
    job_name varchar(255) not null,
    job_type_id int references jobType (id) not null,
    total_amt numeric(10,2) not null,
    pic_rate_id int references pic(id) not null,
    fst_pic_id int references technicians (id) not null,
    fst_pic_amt numeric(10,2) not null,
    sec_pic_id int references technicians (id) not null,
    sec_pic_amt numeric(10,2) not null,
    thrd_pic_id int references technicians (id) not null,
    thrd_pic_amt numeric(10,2) not null,
    frth_pic_id int references technicians (id) not null,
    frth_pic_amt numeric(10,2) not null,
    lst_pic_id int references technicians (id) not null,
    lst_pic_amt numeric(10,2) not null,
    eachJob_concatenated varchar(400) not null unique
);

create table pic (
    id serial primary key,
    fst_rate int not null,
    sec_rate int not null,
    thrd_rate int not null,
    frth_rate int not null,
    lst_rate int not null,
    unique_rate varchar(100) unique,
    created_date date default CURRENT_DATE
);

create table technicians (
    id serial primary key,
    name varchar(100) unique not null
);

create table user_auth (
    id serial primary key,
    name varchar(100) not null,
    mail varchar(100) unique not null,
    pwd varchar(100) not null
)

// some queries

cur.execute("SELECT id FROM technicians;")
technicians_ids = cur.fetchall()


for technician_id in technicians_ids:
    cur.execute(f"""
    SELECT jt.id AS job_type_id,
        COALESCE(SUM(
            CASE WHEN ej.fst_pic_id = {technician_id[0]} THEN ej.fst_pic_amt ELSE 0.0 END +
            CASE WHEN ej.sec_pic_id = {technician_id[0]} THEN ej.sec_pic_amt ELSE 0.0 END +
            CASE WHEN ej.thrd_pic_id = {technician_id[0]} THEN ej.thrd_pic_amt ELSE 0.0 END +
            CASE WHEN ej.frth_pic_id = {technician_id[0]} THEN ej.frth_pic_amt ELSE 0.0 END +
            CASE WHEN ej.lst_pic_id = {technician_id[0]} THEN ej.lst_pic_amt ELSE 0.0 END 
        ), 0.0) AS total_sum
    FROM (
        SELECT id
        FROM jobtype
    ) AS jt
    CROSS JOIN (
        SELECT DISTINCT month_extracted
        FROM eachJob
    ) AS months
    LEFT JOIN eachJob AS ej ON jt.id = ej.job_type_id AND months.month_extracted = ej.month_extracted
    WHERE months.month_extracted = 7
    GROUP BY jt.id
    ORDER BY jt.id;""")

WITH month_cte AS (
    SELECT
        month_id,
    TO_CHAR(DATE_TRUNC('month', TIMESTAMP '2000-01-01'::date + (month_id-1  || ' months')::interval), 'Month') AS month_text
FROM generate_series(1, 12) AS month_id
)
SELECT 
    month_cte.month_text,jb.job_date,unit.name,shop.name,jb.job_no,customer.name,vehicle.plate,vehicle.model,
    vehicle.year,jb.invoice_no,jb.job_name,jb.total_amt,t_one.name,t_two.name,t_three.name,t_four.name,t_five.name
FROM eachJob jb 
LEFT JOIN month_cte
ON month_cte.month_id = jb.month_extracted
LEFT JOIN res_partner AS unit
ON unit.id = jb.business_unit_id
LEFT JOIN shop
ON shop.id = jb.shop_id
LEFT JOIN customer
ON customer.id = jb.customer_id
LEFT JOIN vehicle
ON vehicle.id = jb.vehicle_id
LEFT JOIN jobType
ON jobType.id = jb.job_type_id
LEFT JOIN technicians AS t_one
ON t_one.id = jb.fst_pic_id 
LEFT JOIN technicians AS t_two
ON t_two.id = jb.sec_pic_id 
LEFT JOIN technicians AS t_three
ON t_three.id = jb.thrd_pic_id 
LEFT JOIN technicians AS t_four
ON t_four.id = jb.frth_pic_id 
LEFT JOIN technicians AS t_five
ON t_five.id = jb.lst_pic_id 
ORDER BY jb.job_date DESC,job_no DESC
LIMIT 81;